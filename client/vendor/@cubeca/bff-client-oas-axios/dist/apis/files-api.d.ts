/**
 * BFF - CUBE DAO Canada
 * # BFF (Backend-for-Frontend)  The BFF API caters to each and every whim of the Frontend, i.e. it receives, bundles, packages and formats data exactly as the Frontend needs it.  The actual implementation of the BFF will then in turn translate the Frontend traffic into whatever the specialized and semantically modular \"real\" backend services understand.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: raphaelhuefner@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { FilesDetailsResponse } from '../models';
/**
 * FilesApi - axios parameter creator
 * @export
 */
export declare const FilesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get file details.
     * @summary Get file details
     * @param {string} fileId File ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fileDetails: (fileId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FilesApi - functional programming interface
 * @export
 */
export declare const FilesApiFp: (configuration?: Configuration) => {
    /**
     * Get file details.
     * @summary Get file details
     * @param {string} fileId File ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fileDetails(fileId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FilesDetailsResponse>>;
};
/**
 * FilesApi - factory interface
 * @export
 */
export declare const FilesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get file details.
     * @summary Get file details
     * @param {string} fileId File ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fileDetails(fileId: string, options?: any): AxiosPromise<FilesDetailsResponse>;
};
/**
 * FilesApi - interface
 * @export
 * @interface FilesApi
 */
export interface FilesApiInterface {
    /**
     * Get file details.
     * @summary Get file details
     * @param {string} fileId File ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilesApiInterface
     */
    fileDetails(fileId: string, options?: AxiosRequestConfig): AxiosPromise<FilesDetailsResponse>;
}
/**
 * FilesApi - object-oriented interface
 * @export
 * @class FilesApi
 * @extends {BaseAPI}
 */
export declare class FilesApi extends BaseAPI implements FilesApiInterface {
    /**
     * Get file details.
     * @summary Get file details
     * @param {string} fileId File ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FilesApi
     */
    fileDetails(fileId: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FilesDetailsResponse, any>>;
}
